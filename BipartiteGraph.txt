

 bool bfs(vector<vector<int>>& adj,vector<int> &color,int node){
        color[node]=0;
        
        queue<int> q;
        q.push(node);
        
        while(q.empty()==false){
            int temp=q.front();
            q.pop();
            
            for(auto ele:adj[temp]){
                if(color[ele]==-1){
                    color[ele]=color[temp]==0 ? 1:0;
                    q.push(ele);
                    
                }
                else if(color[ele]==color[temp]) {
                    return false;
                    
                }
            }
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& adj) {
        int v=adj.size();
        vector<int> color(v,-1);
        
        for(int i=0;i<v;i++ ){
            
            if(color[i]==-1){
                if(bfs(adj,color,i)==false)return false;
            }
        }
        return true;
        
        
        
        // Code here
    }