# here is the topologicalSort function using the bfs traversal which is also known as khans algorithm

# it uses the concept of indgrees to analyze the topo sort 

# here by this you can also find that the sort is possible or not by checking the cnt of the pushed or popped from the queue and by that you can find that the graph is cyclic or not easily !!

    
    
vector<int> topologicalSort(vector<vector<int>>& adj) {
    int v=adj.size();
    vector<int> indgree(v,0);
    

    for(int i=0;i<v;i++){
        for(auto j: adj[i]){
            indgree[j]++;
        }
    }
    
    queue<int> q;
    for(int i=0;i<v;i++){
        if(indgree[i]==0)
            q.push(i);
    }
    
    vector<int>ans;
    // int cnt = 0;
    while(q.empty()==false){
        int node=q.front();
        ans.push_back(node);
        q.pop();
        cnt++;
        
        for(auto i:adj[node]){
            indgree[i]--;
            if(indgree[i]==0)q.push(i);
        }
    }

    if(cnt!=v){
        it means graph is cyclic in nature !!
    }


    return ans;
    
        
        
        
        
    }